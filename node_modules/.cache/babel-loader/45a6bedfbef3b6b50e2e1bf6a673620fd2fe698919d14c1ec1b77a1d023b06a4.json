{"ast":null,"code":"var _jsxFileName = \"E:\\\\University\\\\04_FourthYear\\\\WebNangCao\\\\Exercises\\\\BTCN01\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Square({\n  value,\n  onSquareClick,\n  isWinningSquare\n}) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: `square ${isWinningSquare ? 'winning-square' : ''}`,\n    onClick: onSquareClick,\n    children: value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n}\n_c = Square;\nfunction Board({\n  xIsNext,\n  squares,\n  onPlay\n}) {\n  function handleClick(i) {\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n    const nextSquares = squares.slice();\n    if (xIsNext) {\n      nextSquares[i] = 'X';\n    } else {\n      nextSquares[i] = 'O';\n    }\n    onPlay(nextSquares);\n  }\n  const result = calculateWinner(current.squares);\n  const winner = result ? result.winner : null;\n  const winningLine = result ? result.line : [];\n  let status;\n  if (winner) {\n    status = 'Winner: ' + winner;\n  } else if (squares.filter(square => square === null).length === 0) {\n    status = 'Draw: No winner';\n  } else {\n    status = 'Next player: ' + (xIsNext ? 'X' : 'O');\n  }\n  const renderSquare = i => {\n    const isWinningSquare = winningLine.includes(i);\n    /*#__PURE__*/_jsxDEV(Square, {\n      value: squares[i],\n      onSquareClick: () => handleClick(i),\n      isWinningSquare: isWinningSquare\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }, this);\n  };\n  const renderRow = rowIndex => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board-row\",\n    children: Array(3).fill(null).map((_, colIndex) => renderSquare(rowIndex * 3 + colIndex))\n  }, rowIndex, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status\",\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), Array(3).fill(null).map((_, rowIndex) => renderRow(rowIndex))]\n  }, void 0, true);\n}\n_c2 = Board;\nexport default function Game() {\n  _s();\n  const [history, setHistory] = useState([Array(9).fill(null)]);\n  const [currentMove, setCurrentMove] = useState(0);\n  const xIsNext = currentMove % 2 === 0;\n  const currentSquares = history[currentMove];\n  const [isAscending, setIsAscending] = useState(true);\n  function handlePlay(nextSquares) {\n    const nextHistory = [...history.slice(0, currentMove + 1), nextSquares];\n    setHistory(nextHistory);\n    setCurrentMove(nextHistory.length - 1);\n  }\n  function jumpTo(nextMove) {\n    setCurrentMove(nextMove);\n  }\n  const toggleSortOrder = () => {\n    setIsAscending(!isAscending);\n  };\n  const moves = history.map((squares, move) => {\n    let description;\n    if (move > 0) {\n      description = 'Go to move #' + move;\n    } else {\n      description = 'Go to game start';\n    }\n    if (move == currentMove) {\n      return;\n    }\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => jumpTo(move),\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)\n    }, move, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this);\n  });\n  if (!isAscending) {\n    moves.reverse();\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-board\",\n      children: /*#__PURE__*/_jsxDEV(Board, {\n        xIsNext: xIsNext,\n        squares: currentSquares,\n        onPlay: handlePlay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"You are at move #\", currentMove]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleSortOrder,\n        children: isAscending ? 'Sort Descending' : 'Sort Ascending'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: moves\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n}\n_s(Game, \"DKiRlZvFq+ondew60D98gPZJtXc=\");\n_c3 = Game;\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return {\n        winner: squares[a],\n        line: [a, b, c]\n      };\n    }\n  }\n  return null;\n}\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"Board\");\n$RefreshReg$(_c3, \"Game\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Square","value","onSquareClick","isWinningSquare","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Board","xIsNext","squares","onPlay","handleClick","i","calculateWinner","nextSquares","slice","result","current","winner","winningLine","line","status","filter","square","length","renderSquare","includes","renderRow","rowIndex","Array","fill","map","_","colIndex","_c2","Game","_s","history","setHistory","currentMove","setCurrentMove","currentSquares","isAscending","setIsAscending","handlePlay","nextHistory","jumpTo","nextMove","toggleSortOrder","moves","move","description","reverse","_c3","lines","a","b","c","$RefreshReg$"],"sources":["E:/University/04_FourthYear/WebNangCao/Exercises/BTCN01/src/App.js"],"sourcesContent":["import { useState } from 'react';\n\nfunction Square({ value, onSquareClick, isWinningSquare}) {\n  return (\n    <button className={`square ${isWinningSquare ? 'winning-square' : ''}`} onClick={onSquareClick}>\n      {value}\n    </button>\n  );\n}\n\nfunction Board({ xIsNext, squares, onPlay }) {\n  function handleClick(i) {\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n    const nextSquares = squares.slice();\n    if (xIsNext) {\n      nextSquares[i] = 'X';\n    } else {\n      nextSquares[i] = 'O';\n    }\n    onPlay(nextSquares);\n  }\n\n  const result = calculateWinner(current.squares);\n  const winner = result ? result.winner : null;\n  const winningLine = result ? result.line : [];\n\n  let status;\n  if (winner) {\n    status = 'Winner: ' + winner;\n  } else if (squares.filter(square => square === null).length === 0) {\n    status = 'Draw: No winner';\n  } else {\n    status = 'Next player: ' + (xIsNext ? 'X' : 'O');\n  }\n\n\n  const renderSquare = (i) => {\n    const isWinningSquare = winningLine.includes(i);\n    <Square \n      value={squares[i]} \n      onSquareClick={() => handleClick(i)} \n      key={i} isWinningSquare={isWinningSquare}/>\n  };\n\n  const renderRow = (rowIndex) => (\n    <div className=\"board-row\" key={rowIndex}>\n      {Array(3)\n        .fill(null)\n        .map((_, colIndex) => renderSquare(rowIndex * 3 + colIndex))}\n    </div>\n  );\n\n  return (\n    <>\n      <div className=\"status\">{status}</div>\n      {Array(3)\n        .fill(null)\n        .map((_, rowIndex) => renderRow(rowIndex))}\n    </>\n  );\n}\n\nexport default function Game() {\n  const [history, setHistory] = useState([Array(9).fill(null)]);\n  const [currentMove, setCurrentMove] = useState(0);\n  const xIsNext = currentMove % 2 === 0;\n  const currentSquares = history[currentMove];\n  const [isAscending, setIsAscending] = useState(true);\n\n  function handlePlay(nextSquares) {\n    const nextHistory = [...history.slice(0, currentMove + 1), nextSquares];\n    setHistory(nextHistory);\n    setCurrentMove(nextHistory.length - 1);\n  }\n\n  function jumpTo(nextMove) {\n    setCurrentMove(nextMove);\n  }\n\n  const toggleSortOrder = () => {\n    setIsAscending(!isAscending);\n  };\n\n  const moves = history.map((squares, move) => {\n    let description;\n    if (move > 0) {\n      description = 'Go to move #' + move;\n    } else {\n      description = 'Go to game start';\n    }\n\n    if(move == currentMove){\n      return;\n    }\n    \n    return (\n      <li key={move}>\n        <button onClick={() => jumpTo(move)}>{description}</button>\n      </li>\n    );\n  });\n\n  if (!isAscending) {\n    moves.reverse();\n  }\n\n  return (\n    <div className=\"game\">\n      \n      <div className=\"game-board\">\n        <Board xIsNext={xIsNext} squares={currentSquares} onPlay={handlePlay} />\n      </div>\n      <div className=\"game-info\">\n        <div>You are at move #{currentMove}</div>\n        <button onClick={toggleSortOrder}>\n          {isAscending ? 'Sort Descending' : 'Sort Ascending'}\n        </button>\n        <ol>{moves}</ol>\n      </div>\n    </div>\n  );\n}\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return { winner: squares[a], line: [a, b, c] };\n    }\n  }\n  return null;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}